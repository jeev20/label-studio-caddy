version: "3.9"
networks:
  caddy:
services:
  caddy:
    image: caddy:2
    container_name: caddy
    restart: always
    depends_on:
      - app
    ports:
      - ${CADDY_HTTP_PORT}:80
      - ${CADDY_HTTPS_PORT}:443
    volumes:
      - ./caddy:/usr/bin/caddy  # Your custom build of Caddy.
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy-config:/config
      - ./caddy-data:/data
    environment:
      DOMAIN: $DUCKDNS_DOMAIN  # Your domain.
      EMAIL: $EMAIL            # The email address to use for ACME registration.
      TOKEN: $DUCKDNS_TOKEN    # Your Duck DNS token.
      LOG_FILE: "/data/access.log"
    networks:
      - caddy
  app:
    stdin_open: true
    container_name: label_studio
    tty: true
    build: .
    image: heartexlabs/label-studio:latest
    expose:
      - "8000"
    depends_on:
      - db
    environment:
      - DJANGO_DB=default
      - POSTGRE_NAME=postgres
      - POSTGRE_USER=postgres
      - POSTGRE_PASSWORD=
      - POSTGRE_PORT=5432
      - POSTGRE_HOST=db
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST:-}
      - JSON_LOG=1
#      - LOG_LEVEL=DEBUG
    volumes:
      - ./mydata:/label-studio/data:rw
    command: label-studio-uwsgi
    networks:
      - caddy

  db:
    image: postgres:11.5
    container_name: label_studio_postgresdb
    hostname: db
    restart: always
    # Optional: Enable TLS on PostgreSQL
    # Just drop your server.crt and server.key into folder 'deploy/pgsql/certs'
    # NOTE: Both files must have permissions u=rw (0600) or less
#    command: >
#      -c ssl=on
#      -c ssl_cert_file=/var/lib/postgresql/certs/server.crt
#      -c ssl_key_file=/var/lib/postgresql/certs/server.key
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ${POSTGRES_DATA_DIR:-./postgres-data}:/var/lib/postgresql/data
      - ./deploy/pgsql/certs:/var/lib/postgresql/certs:ro
    networks:
      - caddy


volumes:
  static: {}
  caddy_data:
    external: true
  caddy_config:
